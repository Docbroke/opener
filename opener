#!/usr/bin/env bash

[[ -z $1 || ! -e $1 ]] &&
	exit 1

## mimetype from perl-file-mimeinfo gives better results compared to file
type mimetype &> /dev/null && mime_type="$(mimetype -b "$1")" || \
	mime_type="$(file -b --mime-type "$1")"


case "$mime_type" in
	text/html|text/xml|application/x-mimearchive|message/rfc822)
		if [[ $TERM = linux && -n $DISPLAY ]]; then
			select ops in exit weaver "$BROWSER" vimb chromium firefox w3m links elinks $EDITOR; do
				[[ $ops = exit ]] && exit
				[[ $ops = w3m || $ops = links || $ops = elinks || $EDITOR ]] && $TERMINAL -x "$ops" "$1" &
				"$ops" "$1" &> /dev/null &
			done
		elif [[ $TERM != linux && -n $DISPLAY ]]; then
			select ops in exit weaver "$BROWSER" vimb chromium firefox w3m links elinks $EDITOR; do
				[[ $ops = exit ]] && exit
				"$ops" "$1" 
			done
		else
			select ops in exit w3m links elinks $EDITOR; do
				[[ $ops = exit ]] && exit
				"$ops" "$1" 
			done
		fi
	;;

	text/*|*/xml|application/x-httpd-php3|application/x-httpd-php4|application/x-httpd-php5|application/x-shellscript)
		if [[ $TERM = linux && -n $DISPLAY ]]; then
			$TERMINAL -x "${VISUAL:-${EDITOR:-vis}}" "$@"
		else
			"${VISUAL:-${EDITOR:-vis}}" "$@"
		fi
	;;

	image/*)
		if [[ -n $DISPLAY ]]; then
			select ops in exit sxiv feh mtpaint lp gifview gimp; do
				[[ $ops = exit ]] && exit
				[[ $ops = gifview ]] && gifview -a "$1" &
				"$ops" "$1" &> /dev/null &
			done
		else
			fbi "$1"
		fi
	;;

	video/*|application/x-matroska)
		if [[ -n $DISPLAY ]]; then
			select ops in exit mpv vlc cvlc ffplay ffprobe mediainfo mplayer; do
				[[ $ops = exit ]] && exit
				[[ $ops = mpv ]] && mpv --player-operation-mode=pseudo-gui -- "$1" && exit
				"$ops" "$1" &
			done
		else
			mpv --vo=drm -- "$1"
		fi
	;;

	audio/*| application/ogg|application/x-ogg|application/mxf|application/sdp|application/smil|application/x-smil|application/streamingmedia|application/x-streamingmedia|application/vnd.rn-realmedia|application/vnd.rn-realmedia-vbr)
		select ops in exit mpv vlc cvlc ffplay ffprobe soxi mediainfo mpg123 mplayer; do
			[[ $ops = exit ]] && exit
			[[ $ops = mpv ]] && mpv --player-operation-mode=pseudo-gui -- "$1" &
			"$ops" "$1" &
		done
	;;

	application/pdf|application/x-pdf)
		if [[ -n $DISPLAY ]]; then
			select ops in exit mupdf xournalpp lp pdfinfo xreader evince zathura qpdfview; do
				[[ $ops = exit ]] && exit
				$ops "$1" &> /dev/null &
			done
		else
			fbgs "$1"
		fi
	;;
	
	application/x-cbz|applilcation/oxps|application/vnd.ms-xpsdocument)
		select ops in exit mupdf xreader evince zathura; do
			[[ $ops = exit ]] && exit
			$ops "$1" &> /dev/null &
		done
	;;
	application/octet-stream)
		case "$1" in
			*.chm|*.CHM) 
				select ops in exit kchmviewer xchm chmopen; do
					[[ $ops = exit ]] && exit
					$ops "$1" &
				done
			;;
			*.gpg)
				gpg -d "$1"
			;;
			*.mobi)
				select ops in exit epy foliate; do
					case $ops in
						exit) exit ;;
						epy) terminator -p Large -x epy.py "$1" ;;
						*) $ops "$1" &> /dev/null & ;;
					esac
				done
			;;
			*)
				echo "unknow filetype, probably binary"
			;;
		esac
	;;
	application/vnd.ms-htmlhelp)
		select ops in exit kchmviewer xchm chmopen; do
			[[ $ops = exit ]] && exit
			$ops "$1" &
		done
	;;

	application/vnd.comicbook*)
		select ops in exit mupdf foliate; do
			[[ $ops = exit ]] && exit
			$ops "$1" &
		done
	;;

	application/epub+zip|application/x-mobipocket-ebook)
		select ops in exit epy mupdf foliate; do
			case $ops in
				exit) exit ;;
				epy) terminator -p Large -x epy.py "$1" ;;
				*) $ops "$1" &> /dev/null & ;;
			esac
		done
	;;

	application/pgp-encrypted)
		gpg -d "$1"
	;;

	application/*zip*|application/x-?ar|application/x-?z*)
		case "$1" in
			*.xoj|*.xopp) xournalpp "$1" &> /dev/null ;;
			*.cb?) 
				select ops in exit mupdf foliate als unar; do
					[[ $ops = exit ]] && exit
					[[ $ops = als || $ops = unar ]] && "$ops" "$1"
					"$ops" "$1" &> /dev/null &
				done
			;;
			*)
				select ops in exit als lsar unar aunpack; do
					[[ $ops = exit ]] && exit
					[[ $ops = aunpack ]] && aunpack -D "$1"
					"$ops" "$1"
				done
			;;
		esac
	;;

	*opendocument*|*openxmlformats*|*msword|*ms-excel|*ms-powerpoint|*abiword|*write*)
		[[ -n $DISPLAY ]] && libreoffice "$1" --norestore &> /dev/null
		[[ -z $DISPLAY ]] && \
			case "$1" in
				*.odt|*.odp|*.ods|*.sxw) odt2txt "$1" ;;
				*.doc) antiword "$1" ;;
				*.docx) docx2txt "$1" - | $PAGER ;;
				*) echo "unable to open" ;;
			esac
	;;

	inode/directory)
		select ops in exit nnn vifm pcmanfm thunar ranger nautilus; do
			[[ $ops = exit ]] && exit
			$ops "$1"
		done
	;;

	inode/x-empty)
		echo "empty file"
		rm -i "$1"
	;;

	*) 
		case "$@" in
			*) echo "no filetype association for $@" ;;
		esac
	;;
esac
